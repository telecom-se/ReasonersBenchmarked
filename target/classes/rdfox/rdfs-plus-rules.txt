PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX owl:  <http://www.w3.org/2002/07/owl#>

PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX owl:  <http://www.w3.org/2002/07/owl#>

# eq_sym
[?o, owl:sameAs, ?s] :- [?s, owl:sameAs, ?o] .

# eq_trans
[?o, owl:sameAs, ?t] :- [?o, owl:sameAs, ?s], [?s, owl:sameAs, ?t] .

#eq_rep_s
[?y, ?p, ?o] :- [?x, owl:sameAs, ?y], [?x, ?p, ?o] .

#eq_rep_p
[?s, ?y, ?o] :- [?x, owl:sameAs, ?y], [?s, ?x, ?o] .

#eq_rep_o
[?s, ?p, ?y] :- [?x, owl:sameAs, ?y], [?s, ?p, ?x] .


# prp_dom
[ ?x, rdf:type, ?c ] :- [ ?p, rdfs:domain, ?c ], [ ?x, ?p, ?y ] .

# prp_rng
[ ?y, rdf:type, ?c ] :- [ ?p, rdfs:range, ?c], [ ?x, ?p, ?y ] .

# prp_fp
[?y1, owl:sameAs, ?y2] :- [?p, rdf:type, owl:FunctionalProperty], [?x, ?p, ?y1], [?x, ?p, ?y2] .

# prp_ifp
[?x1, owl:sameAs, ?x2] :- [?p, rdf:type, owl:InverseFunctionalProperty], [?x1, ?p, ?y], [?x2, ?p, ?y] .

# prp_symp
[ ?y, ?p, ?x] :- [ ?p, rdf:type, owl:SymmetricProperty ], [ ?x, ?p, ?y ] .

# prp_ifp
[?x, ?p, ?z] :- [?p, rdf:type, owl:TransitiveProperty], [?x, ?p, ?y], [?y, ?p, ?z] .


# prp_spo1
[ ?x, ?p2, ?y ] :- [ ?p1, rdfs:subPropertyOf, ?p2 ], [ ?x, ?p1, ?y ] .

# prp_eqp1
[ ?x, ?p2, ?y ] :- [ ?p1, owl:equivalentProperty, ?p2 ], [ ?x, ?p1, ?y ] .

# prp_eqp2
[ ?x, ?p1, ?y ] :- [ ?p1, owl:equivalentProperty, ?p2 ], [ ?x, ?p2, ?y ] .

# prp_inv1
[ ?y, ?p2, ?x ] :- [ ?p1, owl:inverseOf, ?p2 ], [ ?x, ?p1, ?y ] .

# prp_inv2
[ ?y, ?p1, ?x ] :- [ ?p1, owl:inverseOf, ?p2 ], [ ?x, ?p2, ?y ] .

# cax_sco
[?x, rdf:type, ?c2] :- [ ?c1, rdfs:subClassOf, ?c2 ], [?x, rdf:type, ?c1 ] .

# cax_eqc1
[?x, rdf:type, ?c2] :- [ ?c1, owl:equivalentClass, ?c2 ], [?x, rdf:type, ?c1 ] .

# cax_eqc2
#[?x, rdf:type, ?c1] :- [ ?c1, owl:equivalentClass, ?c2 ], [?x, rdf:type, ?c2 ] .

# scm_sco
[ ?c1, rdfs:subClassOf, ?c3 ] :- [ ?c1, rdfs:subClassOf, ?c2 ], [ ?c2, rdfs:subClassOf, ?c3 ] .

# scm_eqc1a
[?c1, rdfs:subClassOf, ?c2 ] :- [ ?c1, owl:equivalentClass, ?c2 ].

# scm_eqc1b
[ ?c2, rdfs:subClassOf, ?c1 ] :- [ ?c1, owl:equivalentClass, ?c2 ].


# scm_eqc2
[ ?c1, owl:equivalentClass, ?c2 ] :- [ ?c1, rdfs:subClassOf, ?c2 ], [ ?c2, rdfs:subClassOf, ?c1 ] .

# scm_spo
[ ?p1, rdfs:subPropertyOf, ?p3 ] :- [ ?p1, rdfs:subPropertyOf, ?p2 ], [?p2, rdfs:subPropertyOf, ?p3 ] .

# scm_eqp1a
[ ?c1, rdfs:subPropertyOf, ?c2 ] :- [ ?c1, owl:equivalentProperty, ?c2 ] .

# scm_eqp1b
[ ?c2, rdfs:subPropertyOf, ?c1 ] :- [ ?c1, owl:equivalentProperty, ?c2 ] .

# scm_eqp2
[ ?c1, owl:equivalentProperty, ?c2 ] :- [ ?c1, rdfs:subPropertyOf, ?c2 ], [ ?c2, rdfs:subPropertyOf, ?c1 ] .


# scm_dom1
[ ?p, rdfs:domain, ?c2 ] :- [ ?p, rdfs:domain, ?c1 ], [?c1, rdfs:subClassOf, ?c2 ] .

# scm_dom2
[ ?p1, rdfs:domain, ?c ] :- [ ?p2, rdfs:domain, ?c ], [?p1, rdfs:subPropertyOf, ?p2 ] .

# scm_rng1
[?p, rdfs:range, ?c2 ] :- [ ?p, rdfs:range, ?c1], [ ?c1, rdfs:subClassOf, ?c2 ] .

# scm_rng2
[?p1, rdfs:range, ?c ] :- [ ?p2, rdfs:range, ?c ], [ ?p1, rdfs:subPropertyOf, ?p2 ] .

